["\n", "LineAnalyzer\n", 
"  has accessor for highest_wf_count\n", 
"  has accessor for highest_wf_words\n", 
"  has accessor for content\n", 
"  has accessor for line_number\n", 
"  has method calculate_word_frequency\n", 
"  calls calculate_word_frequency when created\n", 
"  attributes and values\n", 
"    has attributes content and line_number\n", 
"    content attribute\n", 
"    line_number attribute\n", 
"  #calculate_word_frequency\n", 
"    highest_wf_count value is 3\n", 
"    highest_wf_words check\n", 
"    content attribute will have expected value\n", 
"    line_number attribute\n", 
"\n", 
"Solution\n", 
"  should respond to #analyze_file\n", 
"  should respond to #calculate_line_with_highest_frequency\n", 
"  should respond to #print_highest_word_frequency_across_lines\n", 
"  #analyze_file\n", 
"    creates 3 line analyzers\n", 
"  #calculate_line_with_highest_frequency\n", 
"    calculates highest count across lines to be 4\n", 
"    calculates highest count words across lines to be will, it, really (FAILED - 1)\n", 
"\n", 
"Failures:\n", "\n", "  1) Solution#calculate_line_with_highest_frequency calculates highest count words across lines to be will, it, really\n", "     Failure/Error: words_found = solution.highest_count_words_across_lines.map(&:highest_wf_words).flatten\n", "     NoMethodError:\n", "       undefined method `highest_wf_words' for [4, \"really - will - it - cooler - grader\"]:Array\n", "     # ./spec/solution_spec.rb:39:in `each'\n", "     # ./spec/solution_spec.rb:39:in `map'\n", "     # ./spec/solution_spec.rb:39:in `block (3 levels) in <top (required)>'\n", "\n", "Finished in 0.02813 seconds (files took 0.23943 seconds to load)\n", "19 examples, 1 failure\n", "\n", "Failed examples:\n", "\n", "rspec ./spec/solution_spec.rb:32 # Solution#calculate_line_with_highest_frequency calculates highest count words across lines to be will, it, really\n", "\n"][]